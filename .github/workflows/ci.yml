name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-and-test:
    name: Lint and test
    runs-on: ubuntu-latest
    env:
      DUCKDB_LIB_DIR: /opt/duckdb
      LD_LIBRARY_PATH: /opt/duckdb
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: astral-sh/setup-uv@v5
      - name: Get DuckDB
        run: |
          wget https://github.com/duckdb/duckdb/releases/download/v1.2.2/libduckdb-linux-amd64.zip
          unzip libduckdb-linux-amd64.zip -d /opt/duckdb
      - name: Install
        run: uv sync --all-extras
      - name: Lint
        run: scripts/lint
      - name: Test
        run: scripts/test
      - name: Validate
        run: scripts/validate
      - name: Build docs
        run: uv run mkdocs build --strict
      - uses: actions/upload-pages-artifact@v3
        with:
          path: site/
  deploy-docs:
    name: Deploy docs
    needs: lint-and-test
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment
